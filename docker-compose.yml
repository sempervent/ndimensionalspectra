version: '3.8'

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: om
      POSTGRES_USER: om
      POSTGRES_PASSWORD: om
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U om -d om"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - DATABASE_URL=postgresql+psycopg://om:om@db:5432/om
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    environment:
      - API_BASE=http://nginx/api
      - UI_PORT=8081
      - BEHIND_PROXY=true
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8081')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
      ui:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  pgdata: 